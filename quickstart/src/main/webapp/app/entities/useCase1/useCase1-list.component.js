"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
//
// Source code generated by Celerio, a Jaxio product.
// Documentation: http://www.jaxio.com/documentation/celerio/
// Follow us on twitter: @jaxiosoft
// Need commercial support ? Contact us: info@jaxio.com
// Template pack-angular:src/main/webapp/app/entities/entity-list.component.ts.e.vm
//
var core_1 = require('@angular/core');
var router_1 = require('@angular/router');
var primeng_1 = require('primeng/primeng');
var paging_1 = require("../../support/paging");
var message_service_1 = require('../../service/message.service');
var useCase1_1 = require('./useCase1');
var useCase1_service_1 = require('./useCase1.service');
var UseCase1ListComponent = (function () {
    function UseCase1ListComponent(router, useCase1Service, messageService, confirmationService) {
        this.router = router;
        this.useCase1Service = useCase1Service;
        this.messageService = messageService;
        this.confirmationService = confirmationService;
        this.header = "UseCase1s...";
        this.onAddNewClicked = new core_1.EventEmitter();
        // basic search criterias (visible if not in 'sub' mode)
        this.example = new useCase1_1.UseCase1();
        // list is paginated
        this.currentPage = new paging_1.PageResponse(0, 0, []);
    }
    /**
     * Invoked when user presses the search button.
     */
    UseCase1ListComponent.prototype.search = function (dt) {
        if (!this.sub) {
            dt.reset();
            this.loadPage({ first: 0, rows: dt.rows, sortField: dt.sortField, sortOrder: dt.sortOrder, filters: null, multiSortMeta: dt.multiSortMeta });
        }
    };
    /**
     * Invoked automatically by primeng datatable.
     */
    UseCase1ListComponent.prototype.loadPage = function (event) {
        var _this = this;
        this.useCase1Service.getPage(this.example, event).
            subscribe(function (pageResponse) { return _this.currentPage = pageResponse; }, function (error) { return _this.messageService.error('Could not get the results', error); });
    };
    UseCase1ListComponent.prototype.onRowSelect = function (event) {
        var id = event.data.id.id1.toISOString().substring(0, 19) + '_' +
            event.data.id.id2;
        this.router.navigate(['/useCase1', id]);
    };
    UseCase1ListComponent.prototype.addNew = function () {
        if (this.sub) {
            this.onAddNewClicked.emit("addNew");
        }
        else {
            this.router.navigate(['/useCase1', 'new']);
        }
    };
    UseCase1ListComponent.prototype.showDeleteDialog = function (rowData) {
        var _this = this;
        var useCase1ToDelete = rowData;
        this.confirmationService.confirm({
            message: 'Do you want to delete this record?',
            header: 'Delete Confirmation',
            icon: 'fa fa-trash',
            accept: function () {
                _this.delete(useCase1ToDelete);
            }
        });
    };
    UseCase1ListComponent.prototype.delete = function (useCase1ToDelete) {
        var _this = this;
        var id = useCase1ToDelete.id.id1.toISOString().substring(0, 19) + '_' + useCase1ToDelete.id.id2;
        this.useCase1Service.delete(id).
            subscribe(function (response) {
            _this.currentPage.remove(useCase1ToDelete);
            _this.messageService.info('Deleted OK', 'Angular Rocks!');
        }, function (error) { return _this.messageService.error('Could not delete!', error); });
    };
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], UseCase1ListComponent.prototype, "header", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean)
    ], UseCase1ListComponent.prototype, "sub", void 0);
    __decorate([
        core_1.Output(), 
        __metadata('design:type', Object)
    ], UseCase1ListComponent.prototype, "onAddNewClicked", void 0);
    UseCase1ListComponent = __decorate([
        core_1.Component({
            moduleId: module.id,
            templateUrl: 'useCase1-list.component.html',
            selector: 'useCase1-list'
        }), 
        __metadata('design:paramtypes', [router_1.Router, useCase1_service_1.UseCase1Service, message_service_1.MessageService, primeng_1.ConfirmationService])
    ], UseCase1ListComponent);
    return UseCase1ListComponent;
}());
exports.UseCase1ListComponent = UseCase1ListComponent;
//# sourceMappingURL=useCase1-list.component.js.map