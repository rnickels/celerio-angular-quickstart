"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
//
// Source code generated by Celerio, a Jaxio product.
// Documentation: http://www.jaxio.com/documentation/celerio/
// Follow us on twitter: @jaxiosoft
// Need commercial support ? Contact us: info@jaxio.com
// Template pack-angular:src/main/webapp/app/service/message.service.ts.p.vm
//
var core_1 = require('@angular/core');
var Subject_1 = require('rxjs/Subject');
var MessageService = (function () {
    function MessageService() {
        this.messageSource = new Subject_1.Subject();
        this.messageSource$ = this.messageSource.asObservable();
    }
    MessageService.prototype.info = function (summary, detail) {
        this.messageSource.next({ severity: 'info', summary: summary, detail: detail });
        console.log("INFO: " + summary + " DETAIL: " + detail);
    };
    MessageService.prototype.error = function (summary, detail) {
        this.messageSource.next({ severity: 'error', summary: summary, detail: detail });
        console.log("ERROR: " + summary + " DETAIL: " + detail);
    };
    MessageService = __decorate([
        core_1.Injectable(), 
        __metadata('design:paramtypes', [])
    ], MessageService);
    return MessageService;
}());
exports.MessageService = MessageService;
//# sourceMappingURL=message.service.js.map